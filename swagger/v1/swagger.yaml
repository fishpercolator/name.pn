---
openapi: 3.0.1
info:
  title: name.pn API
  description: "## Welcome to the name.pn API\n\nHere you can get programmatic access
    to name.pn profiles for use in your\nown applications.\n\nFor example, you may
    have an application that sends emails and you want\nto use a person's formal_name
    to address them, instead of asking them for\na title, which is not appropriate
    for many users.\n\n### API keys\n\nYou will need an API key to access this API.
    These can be generated by\nvisiting [your account settings](/users/edit) and filling
    in the form.\n\nYou can supply your key in the headers like this:\n\n```\nAuthentication:
    Bearer <your_key>\n```\n\nYou can test the live API endpoints in the documentation
    below. To do\nso, please click the button marked *Authorize* and enter your API
    key\nthere.\n\n### Terms of use\n\nUse of the name.pn API is subject to the [name.pn
    terms and conditions \nof use](/pages/terms), including the prohibited uses in
    Section 4.\n\nUse of this API is provided with no guarantees. Please be considerate
    in\nhow you use it, including caching responses if you're making frequent\ncalls.\n\nThere
    are no fixed usage limits, but your API key ID is logged with\nevery request and
    we reserve the right to disable clients that are not\nbeing considerate in their
    usage.\n\nAs a guideline, please consider 3600 calls per hour to this API as a\nreasonable
    limit that we would not impose any restrictions on. If you\nneed more than this,
    please contact us for a commercial agreement.\n\nUsage of this API is currently
    provided at no charge. We reserve the\nright to introduce charges to this API
    as this product matures.\n"
  version: v1
paths:
  "/api/v1/users/{slug}":
    parameters:
    - name: slug
      in: path
      description: The slug of the user you want to retrieve
      example: abby-yates
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - User profiles
      security:
      - jwt: []
      responses:
        '401':
          description: not logged in
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        '404':
          description: not found
servers:
- url: "/"
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AlternateName:
      type: object
      required:
      - name
      - category
      properties:
        name:
          type: string
          description: An alternate name for this user
          example: Abigail
        category:
          type: string
          enum:
          - like
          - ok
          - sometimes
          - dislike
          description: 'Whether this user likes to be called by this name: like =
            likes; ok = does not mind; sometimes = only under specific circumstances;
            dislike = dislikes'
    Link:
      type: object
      required:
      - title
      - url
      properties:
        title:
          type: string
          description: The title of the link
          example: Twitter
        url:
          type: string
          description: The link URL
          example: https://example.com/AbbyYates
    PronounSet:
      type: object
      required:
      - nominative
      - oblique
      - possessive_determiner
      - possessive
      - reflexive
      - copula
      properties:
        nominative:
          type: string
          description: The nominative case / subject form of this pronoun
          example: they
        oblique:
          type: string
          description: The oblique case / object form of this pronoun
          example: them
        possessive_determiner:
          type: string
          description: The possessive determiner form of this pronoun
          example: their
        possessive:
          type: string
          description: The possessive (non-determiner) form of this pronoun
          example: theirs
        reflexive:
          type: string
          description: The reflexive form of this pronoun
          example: themself
        copula:
          type: string
          description: Which copula form ('is' or 'are') to use with this pronoun
          example: are
    User:
      type: object
      required:
      - slug
      - personal_name
      - full_name
      - formal_name
      - envelope_name
      - pronoun_style
      - noindex
      - pronounless_style
      properties:
        slug:
          type: string
          description: This user's unique slug
          example: abby-yates
        personal_name:
          type: string
          description: Used when addressing this user in conversation
          example: Abby
        full_name:
          type: string
          description: Used when adding this user to a list of names
          example: Abby Yates
        formal_name:
          type: string
          description: Used in formal contexts such as the opening of a letter
          example: Dr Yates
          nullable: true
        envelope_name:
          type: string
          description: Used when adding this name to an address
          example: Dr Abigail L. Yates
          nullable: true
        pronoun_sets:
          type: array
          description: The user's pronoun sets - note that this is affected by the
            value of pronounless_style
          items:
            "$ref": "#/components/schemas/PronounSet"
          minItems: 1
        pronunciation_of:
          type: string
          enum:
          - full_name
          - personal_name
          - formal_name
          - envelope_name
          description: Which of the fields the pronunciation fields (phonetic, pronunciation
            and ipa) relate to
        phonetic:
          type: string
          description: Phonetic pronunciation
          example: A-bee YAYTS
          nullable: true
        ipa:
          type: string
          description: International Phonetic Alphabet pronunciation
          example: ˈabi jeɪts
          nullable: true
        pronoun_style:
          type: string
          enum:
          - two
          - three
          description: Whether this user prefers to shorten their pronouns to two
            (e.g. they/them) or three (e.g. they/them/theirs)
        pronounless_style:
          type: string
          enum:
          - 
          - none
          - unknown
          - any
          description: If set to none or unknown, the user prefers to use their name
            rather than pronouns. If any, the user has no pronoun preference. This
            value affects the values in pronoun_sets.
          nullable: true
        noindex:
          type: boolean
          description: If true, this user has expressed a preference for their personal
            data not to be indexed by search engines.
          example: false
        pronunciation:
          type: string
          format: uri
          description: 'URL of an audio clip of the pronunciation. **Note**: May be
            a relative URL and may redirect.'
          example: "/rails/active_storage/blobs/redirect/xxx.wav"
          nullable: true
        likeness:
          type: string
          format: uri
          description: 'URL of an image of the user''s likeness. **Note**: May be
            a relative URL and may redirect.'
          example: "/rails/active_storage/blobs/redirect/yyy.jpg"
          nullable: true
        alternate_names:
          type: array
          items:
            "$ref": "#/components/schemas/AlternateName"
        links:
          type: array
          items:
            "$ref": "#/components/schemas/Link"
